#3.8.1 (tags/v3.8.1:1b293b6, Dec 18 2019, 22:39:24) [MSC v.1916 32 bit (Intel)] win32

import sys


def memory_count(lst):
    memory = 0

    for var in lst:
        print('***********')
        print(f'Переменная: {var}')
        print('Весит: ', sys.getsizeof(var))
        spam = sys.getsizeof(var)

        if hasattr(var, '__iter__') and not isinstance(var, str): #Если объект итерируемый, но не строка (Допустим, содержит смешенные типы содержимого)

            if hasattr(var, 'keys'):  # Для словарей. 
                for key, value in var.items():
                    print(f'\nКлюч: \'{key}\' значение {value}')
                    spam += memory_count([key]) + memory_count([value])

            else:
                spam += memory_count(var) # для остального (Пример: my_list =  [5, 15])

        memory += spam

    return memory


# Найти сумму и произведение цифр трехзначного числа, которое вводит пользователь.



#######################################################
#Первый вариант решения 1111111111111111111111111111111

#print("Введите число")
#a = int(input())
#b = 0
#c = 0
#d = 1

#while a > 0:
#    b = a%10
#    a = a // 10
#    c = c + b
#    d = d * b
#*********************************************************************
#Переменные:  [0, 4, 15, 120]

#***********
#Переменная: 0
#Весит:  24
#***********
#Переменная: 4
#Весит:  28
#***********
#Переменная: 15
#Весит:  28
#***********
#Переменная: 120
#Весит:  28

#Затраты памяти программы:  108

#######################################################
#Второй вариант решения 2222222222222222222222222222222

#a = int(input('Введите целое трехзначное число:'))

#hundred = a // 100
#dozen = (a // 10) % 10
#unit = a % 10

#summa = hundred + dozen + unit
#mult = hundred * dozen * unit
#print(f'Сумма цифр в числе: {summa}')
#print(f'Произведение цифр в числе: {mult}')

#*********************************************************************

#Введите целое трехзначное число:456
#Сумма цифр в числе: 15
#Произведение цифр в числе: 120

#Переменные:  [456, 5, 4, 120, 15, 6]

#***********
#Переменная: 456
#Весит:  28
#***********
#Переменная: 5
#Весит:  28
#***********
#Переменная: 4
#Весит:  28
#***********
#Переменная: 120
#Весит:  28
#***********
#Переменная: 15
#Весит:  28
#***********
#Переменная: 6
#Весит:  28

#Затраты памяти программы:  168

#######################################################

#Третий вариант решения 333333333333333333333333333333

#a = int(input('Введите целое трехзначное число:'))

#print(f'Сумма цифр в числе: {(a // 100) + ((a // 10) % 10) + (a % 10)}')
#print(f'Произведение цифр в числе: {(a // 100) * ((a // 10) % 10) * (a % 10)}')

#Сумма цифр в числе: 15
#Произведение цифр в числе: 120

#Переменные:  [456]

#***********
#Переменная: 456
#Весит:  28

#Затраты памяти программы:  28

#######################################################
# ВЫВОД: Использование дополнительных переменных занимает в памяти больше места. Наилучшим решением является вариант 3.



_variable = []
for i in dir():
    if i[0] != '_' and not hasattr(locals()[i], '__name__'):
        _variable.append(locals()[i]) #поочередно добавляет все переменные в список _variable_ 

# dir() возвращает все список атрибутов и методов любого объекта
#Функция locals() возвращает словарь(dict) локальных переменных и их значений, текущей области

print('\nПеременные: ', _variable, '\n')
print('\nЗатраты памяти программы: ', memory_count(_variable))
